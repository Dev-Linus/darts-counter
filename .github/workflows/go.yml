name: Go CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY: ${{ secrets.SSH_KEY }}

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Setup Go
      - name: Set up Go 1.24.0
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'
          check-latest: true

      # Install Go dependencies
      - name: Install dependencies
        run: |
          go mod download

      # Lint using golangci-lint
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: -c .golangci-lint.yml

      # Build backend
      - name: Build Linux binary
        run: |
          mkdir -p bin
          GOOS=linux GOARCH=amd64 go build -o bin/darts-counter ./cmd/server

      # Test backend
      - name: Test
        run: go test -v ./...

      # Setup Node for frontend build
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'darts-fe/package-lock.json'

      # Install frontend dependencies
      - name: Install frontend deps
        working-directory: darts-fe
        run: npm ci

      # Build frontend
      - name: Build frontend
        working-directory: darts-fe
        run: npm run build

      # Deploy backend to server (via SSH)
      - name: Deploy backend binary
        if: ${{ env.SSH_HOST != '' && env.SSH_USER != '' && env.SSH_KEY != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          source: "bin/darts-counter"
          target: "/var/www/your-app-dir"

      # Deploy frontend build to server
      - name: Deploy frontend dist
        if: ${{ env.SSH_HOST != '' && env.SSH_USER != '' && env.SSH_KEY != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          source: "darts-fe/dist/*"
          target: "/var/www/your-app-dir/dist"
          strip_components: 0

      - name: Restart App (SSH)
        if: ${{ env.SSH_HOST != '' && env.SSH_USER != '' && env.SSH_KEY != '' }}
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            systemctl --user restart your-app.service
